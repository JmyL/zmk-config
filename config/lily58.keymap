/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SHIFTED 1
#define NAV 2

&sk {
    release-after-ms = <100>;
};

&sl {
    release-after-ms = <100>;
};

/ {
    combos {
    };

    macros {
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        hl_tk: behavior_hl_tk_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_kp";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&mo>,
                <&kp>;
        };
        tk_hl: behavior_tk_hl_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "tk_hl";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings =
                <&mo>,
                <&kp>;
        };
        tk_hk: behavior_tk_hk_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "tk_hk";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings =
                <&kp>,
                <&kp>;
        };
        hk_tk: behavior_hk_kt_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "hk_tk";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&kp>,
                <&kp>;
        };
        backdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL";
            #binding-cells = <0>;
            bindings =
                <&kp BACKSPACE>,
                <&kp DEL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hk_qtk: hk_qtk {
            compatible = "zmk,behavior-hold-tap";
            label = "HK_QTK";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <270>;
        };
        hshift_tbsdel: hshift_tbsdel {
            compatible = "zmk,behavior-hold-tap";
            label = "HSHIFT_TBSDEL";
            bindings =
                <&kp>,
                <&backdel>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <270>;
        };
        hl_ttl: hl_ttl {
            compatible = "zmk,behavior-hold-tap";
            label = "HL_TTL";
            bindings =
                <&mo>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5                                       &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0      &kp EQUAL
  &kp TAB         &kp Q         &kp W         &kp E         &kp R             &kp T                                              &kp Y         &kp U         &kp I         &kp O         &kp P      &kp MINUS
&kp LCTRL         &kp A         &kp S         &kp D         &kp F             &kp G                                              &kp H         &kp J         &kp K         &kp L      &kp SEMI        &kp SQT
&kp LSHFT         &kp Z         &kp X         &kp C         &kp V             &kp B  &kp LEFT_BRACKET  &kp RIGHT_BRACKET         &kp N         &kp M     &kp COMMA       &kp DOT     &kp SLASH  &kp BACKSLASH
                                        &hl_ttl 1 2      &kp LGUI  &hk_qtk LALT ESC         &kp LSHFT          &kp SPACE     &kp ENTER      &backdel     &kp K_APP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        navigation {
            bindings = <
&kp F12     &kp F1     &kp F2     &kp F3     &kp F4         &kp F5                     &kp F6         &kp F7       &kp F8     &kp F9  &kp F10  &kp F11
  &none  &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)      &kp LG(T)                  &kp LC(U)          &none        &none      &none    &none    &none
  &none    &kp ESC  &kp LG(D)      &none      &none          &none                   &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT    &none    &none
 &trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(LS(V))   &none   &none   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END    &none    &none
                                  &trans     &trans         &trans  &trans  &trans     &trans         &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        function {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &none                   &none                   &none         &none         &none  &none  &none
     &none         &none         &none         &none         &none   &none                   &none  &kp C_BACKLIGHT_TOGGLE  &kp C_BRI_DN  &kp C_BRI_UP  &none  &none
     &none         &none         &none         &none         &none   &none                   &none                   &none         &none         &none  &none  &none
    &trans         &none         &none         &none         &none   &none   &none   &none   &none              &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none  &none
                                              &trans        &trans  &trans  &trans  &trans  &trans                  &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
